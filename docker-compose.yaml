networks:
  rabbitmq-example:
    driver: bridge

services:
  rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    networks:
      - rabbitmq-example
    volumes:
      - ./rabbit-mq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    ports:
      - "8080:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 15s
      retries: 5
    depends_on:
      - postgres
  producer:
  
    build: ./producer
    ports:
      - "5050:5050" 
    networks:
      - rabbitmq-example
    depends_on:
      - postgres
      - rabbitmq
    environment:
      GIN_MODE: "release"
      GIN_HTTPS: "false"
      GIN_ADDR: "0.0.0.0"
      GIN_PORT: "5050"
      LOG_LEVEL: "debug"
      RMQ_URL: "amqp://guest:guest@rabbitmq:5673/"
  # tx-app:
  #   networks:
  #     - rabbitmq-example
  #   build: ./tx-app
  #   depends_on:
  #     - rabbitmq
  #     - postgres
  #   restart: on-failure
  #   ports:
  #     - "8888:8000"
  #   environment: 

  #     LOG_LEVEL: "debug"
  #     RMQ_URL: "amqp://guest:guest@rabbitmq:5673/"
  postgres:
    networks:
      - rabbitmq-example
    image: 'postgres:13-alpine'
    environment:
       - POSTGRES_USER=${DB_USER}  
       - POSTGRES_PASSWORD=${DB_PASSWORD}
       - POSTGRES_DB=${DB_NAME}
       - DATABASE_HOST=${DB_HOST} 
    ports:
      - "5555:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  